// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/models/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Models
model User {
  id Int @id @default(autoincrement())
  name String 
  email String @unique
  password String
  phone String?
  role String @default("user")
  addresses Address[]
  orders Order[]
  cart Cart?
  reviews Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  line1 String
  line2 String?
  city String
  state String
  postalCode String
  country String
  orders Order[]
  createdAt DateTime @default(now())
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  slug String @unique 
  products Product[]
  createdAt DateTime @default(now())
}

model Product {
  id Int @id @default(autoincrement())
  name String 
  slug String @unique
  description String
  price Float 
  stock Int 
  images String[]
  categoryId Int 
  category Category @relation(fields: [categoryId], references: [id])
  reviews Review[] 
  cartItems CartItem[]
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id Int @id @default(autoincrement())
  rating Int 
  comment String?
  userId Int
  productId Int 
  user User @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}

model Cart {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique 
  items CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())
  cart Cart @relation(fields: [cartId], references: [id])
  cartId Int 
  product Product @relation(fields: [productId], references: [id])
  productId Int
  quantity Int 
  createdAt DateTime @default(now())
}

model Order {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  items OrderItem[]
  totalAmount Float
  status String @default("pending")
  addressId Int
  address Address @relation(fields: [addressId], references: [id])
  createdAt DateTime @default(now())
}

model OrderItem {
  id Int @id @default(autoincrement())
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  quantity Int
  price Float
}
